<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>DevExpress.Map.v19.1.Core</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Map">
      <summary>
        <para>Contains common utility classes used by the Map controls from DevExpress.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Map.AttributeDisplayValueEditEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XtraMap.MapItemsLayerBase.AttributeDisplayValueEdit"/> and <see cref="E:DevExpress.Xpf.Map.VectorLayerBase.AttributeDisplayValueEdit"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Map.AttributeDisplayValueEditEventArgs.#ctor(System.String,System.Object,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.Map.AttributeDisplayValueEditEventArgs"/> class with the specified values of event arguments.</para>
      </summary>
      <param name="name">A <see cref="T:System.String"/> object representing the name of an attribute.</param>
      <param name="value">An <see cref="T:System.Object"/> storing an attribute value.</param>
      <param name="displayValue">A <see cref="T:System.String"/> object that is the string representation of the attribute value.</param>
      <param name="patternFragment">A <see cref="T:System.String"/> object representing a fragment of a text pattern, which will be replaced with the display value.</param>
    </member>
    <member name="P:DevExpress.Map.AttributeDisplayValueEditEventArgs.DisplayValue">
      <summary>
        <para>Gets or sets an attribute display value.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object that is the string representation of the attribute value.</value>
    </member>
    <member name="P:DevExpress.Map.AttributeDisplayValueEditEventArgs.Name">
      <summary>
        <para>Returns the name of an attribute.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object representing the name of attribute whose display value should be customized.</value>
    </member>
    <member name="P:DevExpress.Map.AttributeDisplayValueEditEventArgs.PatternFragment">
      <summary>
        <para>Returns the pattern fragment which will be replaced with the <see cref="P:DevExpress.Map.AttributeDisplayValueEditEventArgs.DisplayValue"/>.</para>
      </summary>
      <value>A <see cref="T:System.String"/> object representing the fragment pattern.</value>
    </member>
    <member name="P:DevExpress.Map.AttributeDisplayValueEditEventArgs.Value">
      <summary>
        <para>Returns an attribute value.</para>
      </summary>
      <value>A <see cref="T:System.Object"/> storing an attribute value.</value>
    </member>
    <member name="T:DevExpress.Map.AttributeDisplayValueEditEventHandler">
      <summary>
        <para>A method that will handle the <see cref="E:DevExpress.XtraMap.MapItemsLayerBase.AttributeDisplayValueEdit"/> and <see cref="E:DevExpress.Xpf.Map.VectorLayerBase.AttributeDisplayValueEdit"/> events.</para>
      </summary>
      <param name="sender">The event source. This parameter identifies the <see cref="T:DevExpress.XtraMap.MapItemsLayerBase"/> (WinForms) or <see cref="T:DevExpress.Xpf.Map.VectorLayerBase"/> (WPF) which raised the event.</param>
      <param name="e"></param>
    </member>
    <member name="T:DevExpress.Map.CoordPoint">
      <summary>
        <para>The base class for all map coordinate points.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.Equals(System.Object)">
      <summary>
        <para>Determines whether the two specified <see cref="T:DevExpress.Map.CoordPoint"/> objects are equal.</para>
      </summary>
      <param name="o">The object to compare with the current object.</param>
      <returns>true if specified objects are equal; otherwise false.</returns>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.GetHashCode">
      <summary>
        <para>Gets the hash code (a number) that corresponds to the value of the current <see cref="T:DevExpress.Map.CoordPoint"/> object.</para>
      </summary>
      <returns>An integer value that is the hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.GetX">
      <summary>
        <para>Returns the value of the X coordinate.</para>
      </summary>
      <returns>A <see cref="T:System.Double"/> value.</returns>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.GetY">
      <summary>
        <para>Returns the value of the Y coordinate.</para>
      </summary>
      <returns>A <see cref="T:System.Double"/> value.</returns>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.Offset(System.Double,System.Double)">
      <summary>
        <para>Initializes an instance of a <see cref="T:DevExpress.Map.CoordPoint"/> class descendant object offset by specified values.</para>
      </summary>
      <param name="offsetX">A <see cref="T:System.Double"/> value specifying an X coordinate offset.</param>
      <param name="offsetY">A <see cref="T:System.Double"/> value specifying an Y coordinate offset.</param>
      <returns>A <see cref="T:DevExpress.Map.CoordPoint"/> class descendant object.</returns>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.ToString">
      <summary>
        <para>Returns the textual representation of the <see cref="T:DevExpress.Map.CoordPoint"/>.</para>
      </summary>
      <returns>A <see cref="T:System.String"/> value, which is the textual representation of the <see cref="T:DevExpress.Map.CoordPoint"/>.</returns>
    </member>
    <member name="M:DevExpress.Map.CoordPoint.ToString(System.IFormatProvider)">
      <summary>
        <para>Returns the textual representation of the <see cref="T:DevExpress.Map.CoordPoint"/>.</para>
      </summary>
      <param name="provider">An object implementing the <see cref="T:System.IFormatProvider"/> interface.</param>
      <returns>A <see cref="T:System.String"/> value, which is the textual representation of the <see cref="T:DevExpress.Map.CoordPoint"/>.</returns>
    </member>
    <member name="T:DevExpress.Map.ISupportCoordLocation">
      <summary>
        <para>The interface that should be provided by map vector items whose location can be determined.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Map.ISupportCoordLocation.Location">
      <summary>
        <para>Gets or sets the location of map items implementing this interface.</para>
      </summary>
      <value>A <see cref="T:DevExpress.Map.CoordPoint"/> class descendant object.</value>
    </member>
    <member name="T:DevExpress.Map.ISupportCoordPoints">
      <summary>
        <para>The interface that should be implemented by map vector items specified using an array of points.</para>
      </summary>
    </member>
    <member name="P:DevExpress.Map.ISupportCoordPoints.Points">
      <summary>
        <para>Gets or sets the list of points determining the shape of map items implementing this interface.</para>
      </summary>
      <value>A list of <see cref="T:DevExpress.Map.CoordPoint"/> class descendant objects.</value>
    </member>
    <member name="T:DevExpress.Map.MapBounds">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="M:DevExpress.Map.MapBounds.#ctor(DevExpress.Map.CoordPoint,DevExpress.Map.CoordPoint)">
      <summary>
        <para></para>
      </summary>
      <param name="leftTop"></param>
      <param name="rightBottom"></param>
    </member>
    <member name="M:DevExpress.Map.MapBounds.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="x1"></param>
      <param name="y1"></param>
      <param name="x2"></param>
      <param name="y2"></param>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Bottom">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Contains(DevExpress.Map.MapBounds)">
      <summary>
        <para></para>
      </summary>
      <param name="bounds"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Correct">
      <summary>
        <para></para>
      </summary>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Empty">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Equals(System.Object)">
      <summary>
        <para></para>
      </summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Map.MapBounds.GetHashCode">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Height">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Inflate(DevExpress.Map.MapBounds,System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="bounds"></param>
      <param name="delta"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Intersect(DevExpress.Map.MapBounds,DevExpress.Map.MapBounds)">
      <summary>
        <para></para>
      </summary>
      <param name="rect1"></param>
      <param name="rect2"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Map.MapBounds.IntersectsWith(DevExpress.Map.MapBounds)">
      <summary>
        <para></para>
      </summary>
      <param name="bounds"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Map.MapBounds.IsEmpty">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Map.MapBounds.IsPointInBounds(DevExpress.Map.CoordPoint)">
      <summary>
        <para></para>
      </summary>
      <param name="point"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Left">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Right">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Top">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="M:DevExpress.Map.MapBounds.ToString">
      <summary>
        <para></para>
      </summary>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Union(DevExpress.Map.MapBounds,DevExpress.Map.MapBounds)">
      <summary>
        <para></para>
      </summary>
      <param name="rect1"></param>
      <param name="rect2"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Map.MapBounds.Union(DevExpress.Map.MapBounds,System.Double,System.Double)">
      <summary>
        <para></para>
      </summary>
      <param name="bounds"></param>
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Width">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="P:DevExpress.Map.MapBounds.Zero">
      <summary>
        <para></para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.Map.RangeDistributionBase">
      <summary>
        <para>The base for classes that define distribution of color ranges in a colorizer.</para>
      </summary>
    </member>
    <member name="M:DevExpress.Map.RangeDistributionBase.ConvertRangeValue(System.Double,System.Double,System.Double)">
      <summary>
        <para>Converts the specified range value.</para>
      </summary>
      <param name="min">A <see cref="T:System.Double"/> object that is the minimum possible value.</param>
      <param name="max">A <see cref="T:System.Double"/> object that is the maximum possible value.</param>
      <param name="value">A value to be converted.</param>
      <returns>A <see cref="T:System.Double"/> object that is the result of the conversion.</returns>
    </member>
  </members>
</doc>